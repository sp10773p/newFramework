<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="common">
    <select	id="getMessageList" resultType="map">
      SELECT TYPE, CODE, MESSAGE
        FROM CMM_MESSAGE
       WHERE USE_YN = 'Y'
    </select>

    <select	id="getMessage" parameterType="string" resultType="string">
        SELECT MESSAGE
          FROM CMM_MESSAGE
         WHERE TYPE||CODE = #{CODE}
           AND USE_YN = 'Y'
    </select>

    <insert id="insertAccessLog" parameterType="accessLogModel">
        INSERT INTO CMM_LOG(SID, SESSION_ID, LOG_DTM, LOG_DIV, USER_ID, LOGIN_IP, SCREEN_ID, SCREEN_NM, API_ID, API_KEY, DETAIL_CNT, RMK, URI, PARAM
        )VALUES(#{sid}, #{sessionId}, SYSDATE,<if test="logDiv == null or logDiv == ''">(SELECT MENU_DIV FROM CMM_MENU_MAS WHERE MENU_ID = #{screenId}),</if><if test="logDiv != null and logDiv != ''">#{logDiv},</if>SUBSTR(#{userId}, 1, 35), #{loginIp}, #{screenId}, #{screenNm}, #{apiId}, #{apiKey}, #{detailCnt}, #{rmk}, #{uri}, #{param:CLOB})
    </insert>

    <insert id="insertAutoLogoutLog" parameterType="map">
        INSERT INTO CMM_LOG(SID, SESSION_ID, LOG_DTM, LOG_DIV, USER_ID, LOGIN_IP, SCREEN_ID, SCREEN_NM)
        SELECT #{SID}, #{SESSION_ID}, SYSDATE, LOG_DIV, USER_ID, LOGIN_IP, 'LOGOUT', '로그아웃'
          FROM CMM_LOG
         WHERE SID > TO_CHAR(SYSDATE - (#{SESSION_TIMEOUT} * (1/( 60* 24))), 'YYYYMMDDHH24MISS')
           AND SCREEN_ID != 'LOGOUT'
           AND SESSION_ID NOT IN (
                                  SELECT LOGIN.SESSION_ID
                                    FROM CMM_LOG LOGIN LEFT JOIN CMM_LOG LOGOUT ON LOGIN.SESSION_ID = LOGOUT.SESSION_ID
                                    WHERE LOGIN.SID > TO_CHAR(SYSDATE - (#{SESSION_TIMEOUT} * (1/(60* 24))), 'YYYYMMDDHH24MISS')
                                      AND LOGOUT.SID > TO_CHAR(SYSDATE - (#{SESSION_TIMEOUT} * (1/( 60* 24))), 'YYYYMMDDHH24MISS')
                                      AND LOGIN.SCREEN_ID != 'LOGOUT'
                                      AND LOGOUT.SCREEN_ID = 'LOGOUT'
                                )
          AND SESSION_ID = #{SESSION_ID}
          AND LOG_DIV IS NOT NULL
          AND USER_ID IS NOT NULL
          AND ROWNUM = 1
    </insert>

    <select	id="selectCommCode" parameterType="map" resultType="map">
        <include refid="common.commonCode"/>
    </select>

    <select	id="selectCommCodeForCombo" parameterType="map" resultType="map">
        SELECT B.CODE
                , B.CODE_NM
                , '['||B.CODE||'] '||B.CODE_NM AS COMPLX_CODE_NM
        FROM CMM_STD_CLASS A, CMM_STD_CODE B
        WHERE A.CLASS_ID = B.CLASS_ID
        <if test="CLASS_ID != null and CLASS_ID != ''">
            AND B.CLASS_ID = #{CLASS_ID}
        </if>
        <if test="CODE != null and CODE != ''">
            AND B.CODE = #{CODE}
        </if>
        <if test="LIKE_CODE != null and LIKE_CODE != ''">
            AND B.CODE LIKE '%'||#{LIKE_CODE}||'%'
        </if>
        <if test="LIKE_NAME != null and LIKE_NAME != ''">
            AND B.CODE_NM LIKE '%'||#{LIKE_NAME}||'%'
        </if>
        AND A.USE_CHK = 'Y'
        AND B.USE_CHK = 'Y'
        ORDER BY B.SEQ
    </select>
    
    <select	id="selectCommCodesForCombos" parameterType="map" resultType="map">
    	SELECT 
    		*
    	FROM 
		<foreach collection="CODES_INFO"  item="item" index="index" open="(" separator=" UNION " close=")">
			SELECT 
				A.CLASS_ID, B.CODE, B.CODE_NM, '['||B.CODE||'] '||B.CODE_NM AS COMPLX_CODE_NM, B.SEQ
	        FROM 
	        	CMM_STD_CLASS A, CMM_STD_CODE B
        	WHERE 
        		A.CLASS_ID = B.CLASS_ID
        		AND DECODE(#{item.CLASS_ID}, NULL, B.CLASS_ID, #{item.CLASS_ID}) = B.CLASS_ID
		        AND A.USE_CHK = 'Y'
		        AND B.USE_CHK = 'Y'
		</foreach>
		ORDER BY CLASS_ID, SEQ               
    </select>

    <select	id="selectCommCodeRefInfo" parameterType="map" resultType="map">
        SELECT * FROM CMM_STD_CLASS
         WHERE CLASS_ID = #{CLASS_ID}
    </select>

    <select	id="selectCommCodePagingList" parameterType="map" resultType="map">
        <include refid="common.commonCode"/>
    </select>

    <sql id="commonCode">
        SELECT  ROW_NUMBER() OVER (ORDER BY B.SEQ) RNUM
                , B.CLASS_ID
                , B.CODE
                , B.SEQ
                , B.CODE_NM
                , '['||B.CODE||'] '||B.CODE_NM AS COMPLX_CODE_NM
                , B.CODE_SHT
                , B.USE_CHK
                , B.USER_REF1
                , B.USER_REF2
                , B.USER_REF3
                , B.USER_REF4
                , B.USER_REF5
                , B.REG_ID
                , TO_CHAR(B.REG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS REG_DTM
                , TO_CHAR(B.MOD_DTM, 'YYYY-MM-DD HH24:MI:SS') AS MOD_DTM
                , B.MOD_ID
      FROM CMM_STD_CLASS A, CMM_STD_CODE B
     WHERE A.CLASS_ID = B.CLASS_ID
        <if test="CLASS_ID != null and CLASS_ID != ''">
          AND B.CLASS_ID = #{CLASS_ID}
        </if>
        <if test="CODE != null and CODE != ''">
          AND B.CODE = #{CODE}
        </if>
        <if test="LIKE_CODE != null and LIKE_CODE != ''">
          AND B.CODE LIKE '%'||#{LIKE_CODE}||'%'
        </if>
        <if test="LIKE_NAME != null and LIKE_NAME != ''">
          AND B.CODE_NM LIKE '%'||#{LIKE_NAME}||'%'
        </if>
        <if test="SEARCH_TXT1 != null and SEARCH_TXT1 != ''">
            <if test="SEARCH_COL1 == 'CODE'">
                AND B.CODE LIKE '%'||#{SEARCH_TXT1}||'%'
            </if>
            <if test="SEARCH_COL1 == 'CODE_NM'">
                AND B.CODE_NM LIKE '%'||#{SEARCH_TXT1}||'%'
            </if>
        </if>
          AND A.USE_CHK = 'Y'
          AND B.USE_CHK = 'Y'
        ORDER BY B.SEQ
    </sql>

    <sql id="commonCodeName">
        SELECT MAX(CODE_NM) AS CODE_NM FROM CMM_STD_CODE
         WHERE USE_CHK = 'Y'
    </sql>

    <select	id="selectUserIpAccess" resultType="string" parameterType="string">
        SELECT IP
          FROM  CMM_IP_ACCESS A
         WHERE USER_ID = #{USER_ID}
           AND AUTH_YN = 'Y'
    </select>

    <select	id="selectLogList" parameterType="map" resultType="map">
        SELECT ROW_NUMBER() OVER (ORDER BY SID DESC) RNUM,
                SID,
                TO_CHAR(LOG_DTM, 'YYYY-MM-DD HH24:MI:SS') AS LOG_DTM,
                LOG_DIV,
                USER_ID,
                LOGIN_IP,
                SCREEN_ID,
                SCREEN_NM,
                RMK,
                URI,
                PARAM
          FROM CMM_LOG
         WHERE LOG_DIV IN ('W', 'M')
            AND LOG_DTM BETWEEN TO_DATE(#{F_LOG_DTM}||'000000', 'YYYYMMDDHH24MISS') AND TO_DATE(#{T_LOG_DTM}||'235959', 'YYYYMMDDHH24MISS')
            AND USER_ID = #{USER_ID}
            AND SCREEN_ID = #{SCREEN_ID}
            <if test="URI != null and URI != ''">
                AND URI LIKE '%'||#{URI}||'%'
            </if>
            <if test="SCREEN_NM != null and SCREEN_NM != ''">
                AND SCREEN_NM LIKE '%'||#{SCREEN_NM}||'%'
            </if>
            <if test="RMK != null and RMK != ''">
                AND RMK LIKE '%'||#{RMK}||'%'
            </if>
            <if test="ALL_PARAM != null and ALL_PARAM != ''">
                AND PARAM LIKE '%'||#{ALL_PARAM}||'%'
            </if>
            AND URI NOT LIKE '/jspView.do'||'%'
        ORDER BY SID DESC
    </select>

    <select	id="selectNoticeList" parameterType="map" resultType="map">
        <![CDATA[
        SELECT SN,
                CASE WHEN LENGTH(TITLE) > 30 THEN
                  SUBSTR(TITLE, 1, 30)||'..'
                ELSE TITLE END AS TITLE,
                TO_CHAR(NVL(MOD_DTM, REG_DTM), 'YYYY-MM-DD') AS REG_DTM
          FROM CMM_NOTICE
         WHERE ROWNUM <= 5
        ORDER BY MOD_DTM DESC
        ]]>
    </select>

    <select	id="selectNewsList" parameterType="map" resultType="map">
        <![CDATA[
        SELECT SN,
                CASE WHEN LENGTH(SUBJECT) > 30 THEN
                  SUBSTR(SUBJECT, 1, 30)||'..'
                ELSE SUBJECT END AS SUBJECT,
                TO_CHAR(REG_DTM, 'YYYY-MM-DD') AS REG_DTM
          FROM CMM_NEWS
         WHERE ROWNUM <= 3
        ORDER BY REG_DTM DESC
        ]]>
    </select>


    <select	id="selectPopupNoticeList" parameterType="map" resultType="map">
        SELECT   A.SN
                , A.TITLE
                , A.CONTENTS
                , A.POPUP_LAST_DT
         FROM  CMM_NOTICE A
        WHERE  A.IS_POPUP = 'Y'
          AND  A.POPUP_LAST_DT &gt;= TO_CHAR(SYSDATE, 'YYYYMMDD')
        ORDER  BY A.SN DESC
    </select>
</mapper>